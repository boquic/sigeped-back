
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ROLESScalarFieldEnum = {
  id_rol: 'id_rol',
  nombre_rol: 'nombre_rol',
  descripcion: 'descripcion',
  permisos: 'permisos',
  created_at: 'created_at'
};

exports.Prisma.USUARIOSScalarFieldEnum = {
  id_usuario: 'id_usuario',
  username: 'username',
  password_hash: 'password_hash',
  email: 'email',
  telefono: 'telefono',
  id_rol: 'id_rol',
  activo: 'activo',
  ultimo_acceso: 'ultimo_acceso',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token_hash: 'token_hash',
  is_revoked: 'is_revoked',
  expires_at: 'expires_at',
  created_at: 'created_at',
  replaced_by_id: 'replaced_by_id',
  user_agent: 'user_agent',
  ip: 'ip'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token_hash: 'token_hash',
  expires_at: 'expires_at',
  used_at: 'used_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  ROLES: 'ROLES',
  USUARIOS: 'USUARIOS',
  RefreshToken: 'RefreshToken',
  PasswordResetToken: 'PasswordResetToken'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\boris\\sigeped-backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\boris\\sigeped-backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// prisma/schema.prisma\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel ROLES {\n  id_rol      Int      @id @default(autoincrement())\n  nombre_rol  String   @unique\n  descripcion String?\n  permisos    Json?\n  created_at  DateTime @default(now())\n\n  USUARIOS USUARIOS[]\n\n  @@map(\"roles\")\n}\n\nmodel USUARIOS {\n  id_usuario    Int       @id @default(autoincrement())\n  username      String    @unique\n  password_hash String\n  email         String    @unique\n  telefono      String?\n  id_rol        Int\n  activo        Boolean   @default(true)\n  ultimo_acceso DateTime?\n  created_at    DateTime  @default(now())\n  updated_at    DateTime  @updatedAt\n\n  rol ROLES @relation(fields: [id_rol], references: [id_rol], onUpdate: Cascade, onDelete: Restrict)\n\n  refreshTokens       RefreshToken[]\n  passwordResetTokens PasswordResetToken[]\n\n  @@map(\"usuarios\")\n}\n\nmodel RefreshToken {\n  id             Int      @id @default(autoincrement())\n  userId         Int\n  token_hash     String   @unique\n  is_revoked     Boolean  @default(false)\n  expires_at     DateTime\n  created_at     DateTime @default(now())\n  replaced_by_id Int?\n  user_agent     String?\n  ip             String?\n\n  user       USUARIOS       @relation(fields: [userId], references: [id_usuario], onDelete: Cascade)\n  replacedBy RefreshToken?  @relation(\"TokenReplacement\", fields: [replaced_by_id], references: [id])\n  replaced   RefreshToken[] @relation(\"TokenReplacement\")\n\n  @@index([userId])\n  @@index([expires_at])\n  @@map(\"refresh_tokens\")\n}\n\nmodel PasswordResetToken {\n  id         Int       @id @default(autoincrement())\n  userId     Int\n  token_hash String    @unique\n  expires_at DateTime\n  used_at    DateTime?\n\n  user USUARIOS @relation(fields: [userId], references: [id_usuario], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([expires_at])\n  @@map(\"password_reset_tokens\")\n}\n",
  "inlineSchemaHash": "649f643a668c4936d58eab48a7a0aeab0a46b30badf49fd1fc71be4fdd222467",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"ROLES\":{\"fields\":[{\"name\":\"id_rol\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre_rol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permisos\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"USUARIOS\",\"kind\":\"object\",\"type\":\"USUARIOS\",\"relationName\":\"ROLESToUSUARIOS\"}],\"dbName\":\"roles\"},\"USUARIOS\":{\"fields\":[{\"name\":\"id_usuario\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_rol\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ultimo_acceso\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rol\",\"kind\":\"object\",\"type\":\"ROLES\",\"relationName\":\"ROLESToUSUARIOS\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUSUARIOS\"},{\"name\":\"passwordResetTokens\",\"kind\":\"object\",\"type\":\"PasswordResetToken\",\"relationName\":\"PasswordResetTokenToUSUARIOS\"}],\"dbName\":\"usuarios\"},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_revoked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"replaced_by_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"USUARIOS\",\"relationName\":\"RefreshTokenToUSUARIOS\"},{\"name\":\"replacedBy\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"TokenReplacement\"},{\"name\":\"replaced\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"TokenReplacement\"}],\"dbName\":\"refresh_tokens\"},\"PasswordResetToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"USUARIOS\",\"relationName\":\"PasswordResetTokenToUSUARIOS\"}],\"dbName\":\"password_reset_tokens\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

